option name = "hippie-oss";
option app_label = "hippie-oss";

message HippieOSSService (Service){
    option verbose_name = "HippieOSS Service";
    option kind = "OSS";

    optional string blacklist = 1 [help_text = "A comma separated list of ONUs that are deemed not to be valid ONUs", null = True, db_index = False, blank = False];
}

message HippieOSSServiceInstance (ServiceInstance){
    option owner_class_name = "HippieOSSService";
    option verbose_name = "HippieOSS Service Instance";

    required string valid = 1 [default = "awaiting", choices = "(('awaiting', 'Awaiting Validation'), ('valid', 'Valid'), ('invalid', 'Invalid'))", help_text = "Wether this ONU has been validated by the external OSS", null = False, blank = False];
    required string serial_number = 2 [max_length = 254, null = False, db_index = False, blank = False, tosca_key=True, unique = True];
    required string of_dpid = 4 [max_length = 254, null = False, db_index = False, blank = False];
    optional int32 c_tag = 5 [null = True, db_index = False, blank = False, unique = True, feedback_state = True];
}